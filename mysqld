#! /bin/bash

### BEGIN INIT INFO
# Provides: mysql
# Required-Start: $local_fs $network $remote_fs $syslog
# Required-Stop: $local_fs $network $remote_fs $syslog
# Should-Start: ypbind nscd ldap ntpd xntpd network-manager
# Should-Stop: ypbind nscd ldap ntpd xntpd network-manager
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop MySQL
# Description: MySQL is a very fast and reliable SQL database engine.
### END INIT INFO

PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:~/bin
export PATH

if [ "$(id -u)" != "0" ]; then
    echo -e "\033[1;31m[E]\033[0m  You must have root permissions for run this script, please use sudo and try again."
    exit 3
fi

### Maybe you need to change these.
name=mysqld
### In the most cases, the binary file of programs are in `/usr/bin` or `/usr/local/bin`.
### Try use `which mysqld_safe` to find the full path, or just use `mysqld_safe` if it in `$PATH`.
bin=/usr/local/mysql/bin/mysqld_safe
### In the most cases, the configuration file of programs are in `/etc`. You can create your own configuration file and edit this to the new path.
config=/home/www/etc/my.cnf
### By default, the pid file of programs are in `/var/run`. So you don't need to edit this.
### But pay attention to `$name`, it may be different. You can find the path in the configuration file.
pidFile=/var/run/$name.pid

getPid() {
    ### Delete spaces, tabs and newlines.
    pid=$(cat $pidFile 2>/dev/null | tr -d ' \t\n')
    if [ "$pid" ] && [ ! -d "/proc/$pid" ]; then
        rm -f $pidFile
        unset pid
    fi
}

### Successfully start the application if the progress exists after 5 seconds.
doStart() {
    echo -en "\033[1;36m[I]\033[0m  Starting $name"
    ### mysqld_safe is a script for running mysqld, so we can't use its pid.
    $bin --defaults-file="$config" > /dev/null 2>&1 &

    getPid
    for (( i=0; i<=5; i++ )); do
        if [ -d "/proc/$pid" ]; then
            echo -n '.'
            sleep 1
        else
            echo -e "\n\033[1;31m[E]\033[0m  Start $name failed."
            exit 1
        fi
    done
    echo -e "\n\033[1;32m[N]\033[0m  Start $name succeeded."
}

### Successfully stop the application if the progress doesn't exists in 10 seconds.
doStop() {
    echo -en "\033[1;36m[I]\033[0m  Stopping $name"
    kill $pid

    for (( i=0; i<=10; i++ )); do
        if [ -d "/proc/$pid" ]; then
            if [ "$i" = "10" ]; then
                echo -e "\n\033[1;31m[E]\033[0m  Stop $name failed. Try using $0 kill."
                exit 1
            fi
            echo -n '.'
            sleep 1
        else
            ### Just for restart.
            unset pid
            echo -e "\n\033[1;32m[N]\033[0m  Stop $name succeeded."
            break
        fi
    done
}

case "$1" in
    start)
    getPid
    if [ "$pid" ]; then
        echo -e "\033[1;33m[W]\033[0m  $name already running. pid = $pid"
        exit 2
    else
        doStart
    fi
    ;;

    stop)
    getPid
    if [ "$pid" ]; then
        doStop
    else
        echo -e "\033[1;33m[W]\033[0m  $name not running."
        exit 2
    fi
    ;;

    restart)
    getPid
    if [ "$pid" ]; then
        echo -e "\033[1;36m[I]\033[0m  Restarting $name: "
        doStop
        doStart
    else
        echo -e "\033[1;33m[W]\033[0m  $name not running"
        doStart
    fi
    ;;

    status)
    getPid
    if [ "$pid" ]; then
        echo -e "\033[1;32m[N]\033[0m  $name is running. pid = $pid"
    else
        echo -e "\033[1;32m[N]\033[0m  $name not running."
    fi
    ;;

    *)
    script=$(basename "$0")
    ### You can't reload the configuration file in here, but you can use `SET` statement to change server system variables dynamically.
    ### See https://dev.mysql.com/doc/refman/5.6/en/server-system-variables.html and https://dev.mysql.com/doc/refman/5.6/en/set-statement.html.
    ### You also can't forcefully kill mysqld, it's not safe. And mysqld_safe will rerun mysqld.
#   echo "Usage: [sudo] $script {start|stop|kill|restart|reload|status}" >&2
    echo "Usage: [sudo] $script {start|stop|restart|status}." >&2
    exit 3
    ;;
esac

exit 0
