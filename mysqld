#! /bin/sh

### BEGIN INIT INFO
# Provides: mysql
# Required-Start: $local_fs $network $remote_fs $syslog
# Required-Stop: $local_fs $network $remote_fs $syslog
# Should-Start: ypbind nscd ldap ntpd xntpd network-manager
# Should-Stop: ypbind nscd ldap ntpd xntpd network-manager
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop MySQL
# Description: MySQL is a very fast and reliable SQL database engine.
### END INIT INFO

bin=/usr/local/mysql/bin/mysqld_safe
config=/home/www/etc/my.cnf
pidFile=/var/run/mysqld.pid
if [ -f "$pidFile" ]; then
    pid=$(cat $pidFile)
    checkProgress=$(kill -0 $pid 2>&1 > /dev/null && echo -n $?)
    if [ "$checkProgress" != "0" ]; then
        rm -f $pidFile
        unset pid
    fi
fi
script=/etc/init.d/mysqld

mysql() {
    $bin --defaults-file="$config" 2>&1 > /dev/null &
}

doStart() {
    if [ "$pid" ]; then
        echo "MySQL already running. pid = $pid"
    else
        mysql
        echo 'Done.'
    fi
}

doStop() {
    if [ "$pid" ]; then
        kill $pid
        echo 'Done.'
    else
        echo 'MySQL not running.'
    fi
}

doRestart() {
    if [ "$pid" ]; then
        echo 'Stopping MySQL...'
        kill $pid
        echo 'Done.'
        sleep 1
        echo 'Starting MySQL...'
        mysql
        echo 'Done.'
    else
        echo -e 'MySQL not running.\nStarting MySQL...'
        mysql
        echo 'Done.'
    fi
}

### It doesn't work.
#doReload() {
#    if [ "$pid" ]; then
#        kill -HUP $pid
#        echo 'Done.'
#    else
#        echo -e 'MySQL not running.\nStarting MySQL...'
#        mysql
#        echo 'Done.'
#    fi
#}

checkStatus() {
    if [ "$pid" ]; then
        echo "MySQL is running. pid = $pid"
    else
        echo 'MySQL not running.'
    fi
}

case "$1" in
    start)
    echo 'Starting MySQL...'
    doStart
    ;;
    stop)
    echo 'Stopping MySQL...'
    doStop
    ;;
#   reload)
#   echo 'Reloading MySQL configuration...'
#   doReload
#   ;;
    restart)
    echo 'Restarting MySQL: '
    doRestart
    ;;
    status)
    checkStatus
    ;;
    *)
#   echo "Usage: $script {start|stop|restart|reload|status}" >&2
    echo "Usage: $script {start|stop|restart|status}" >&2
    exit 3
    ;;
esac

exit 0
